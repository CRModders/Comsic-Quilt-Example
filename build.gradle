plugins {
    id "java"
    id "cosmicloom" version "1.0.0-dev"
    id "maven-publish"
}


repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}


dependencies {
    cosmicReach(loom.getCosmicReach(cosmic_reach_version))
    modImplementation(loom.getCosmicQuilt(cosmic_quilt_version))


    // Modmenu
//    modImplementation "dev.crmodders:modmenu:${modmenu_version}"



    // FluxAPI
    //  If you don't want FluxAPI included in your project, remove this and the reference in the `gradle.properties`
//    modImplementation "dev.crmodders:fluxapi:${fluxapi_version}"
}


processResources {
    def resourceTargets = [ // Locations of where to inject the properties
            "quilt.mod.json"
    ]

    // Left item is the name in the target, right is the varuable name
    def replaceProperties = [
            "mod_version"     : project.version,
            "mod_group"       : project.group,
            "mod_name"        : project.name,
            "mod_id"          : id,
    ]


    inputs.properties replaceProperties
    replaceProperties.put "project", project
    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}


loom {
    accessWidenerPath = file("src/main/resources/examplemod.accesswidener")
}



java {
	withSourcesJar()
	// withJavadocJar() // If docs are included with the project, this line can be un-commented

    // Sets the Java version
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = id

		    from components.java
        }
    }

    repositories {

    }
}
